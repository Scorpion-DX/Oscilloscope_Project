C51 COMPILER V9.00   GUI                                                                   11/04/2018 12:51:32 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE GUI
OBJECT MODULE PLACED IN gui.OBJ
COMPILER INVOKED BY: I:\Program Files (x86)\C51\BIN\C51.EXE gui.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include"gui.h"
   2          
   3          //---汉字的字库头文件---//
   4          #include"charcode.h"
   5          
   6          //---如果要显示图片就添加这个头文件---//
   7          #ifdef PICTURE_SHOW
              
              #include"picture.h"
              
              #endif
  12          
  13          /****************************************************************************
  14          *函数名：GUI_Dot
  15          *输  入：x：点的X坐标
  16          *      * y：点的Y坐标
  17          *      * color：点的颜色
  18          *输  出：
  19          *功  能：给一块3*3像素涂上颜色。
  20          ****************************************************************************/     
  21          
  22          void GUI_Dot(uint x, uint y, uint color)
  23          {  
  24   1              uchar i;
  25   1      
  26   1              TFT_SetWindow(x - 1, y - 1, x , y );  //单个像素大小，调节这里改变
  27   1      
  28   1              for(i=0; i<16; i++)
  29   1              {
  30   2                      TFT_WriteData(color);
  31   2              }
  32   1      }
  33          
  34          /****************************************************************************
  35          *函数名：GUI_DrowSign
  36          *输  入：x：标记的X坐标；
  37          *      * y：标记的Y坐标
  38          *      * color：标记的颜色
  39          *输  出：
  40          *功  能：画一个十字的标记
  41          ****************************************************************************/     
  42          
  43          void GUI_DrowSign(uint x, uint y, uint color)
  44          {
  45   1          uchar i;
  46   1      
  47   1          TFT_SetWindow(x-3, y, x+3, y);
  48   1          for(i=0; i<7; i++)
  49   1          {
  50   2              TFT_WriteData(color);    
  51   2          }
  52   1          TFT_SetWindow(x, y-3, x, y+3);
  53   1          for(i=0; i<7; i++)
  54   1          {
  55   2              TFT_WriteData(color);    
C51 COMPILER V9.00   GUI                                                                   11/04/2018 12:51:32 PAGE 2   

  56   2          }
  57   1      }
  58          
  59          ///****************************************************************************
  60          //*函数名：GUI_Box
  61          //*输  入： sx, sy, ex, ey, color
  62          //*输  出：
  63          //*功  能：给一个区域涂上颜色。
  64          //****************************************************************************/   
  65          //void GUI_Box(uint sx, uint sy, uchar ex, uint ey, uint color)
  66          //{ 
  67          //      uint temp;   
  68          //      TFT_SetWindow(sx, sy, ex, ey); 
  69          //  sx = ex - sx + 1;
  70          //      sy = ey - sy + 1;
  71          //      while (sx--)
  72          //      {
  73          //              temp = sy;
  74          //              while (temp--)
  75          //              {       
  76          //                      TFT_WriteColorData(color);
  77          //              }
  78          //      }
  79          //}
  80          
  81          /****************************************************************************
  82          *函数名：GUI_Line 
  83          *输  入：xStart：直线的起始X坐标
  84          *      * yStart：直线的其实Y坐标
  85          *      * xEnd：直线的结束X坐标
  86          *      * yEnd：直线的结束Y坐标
  87          *      * color：直线的颜色
  88          *输  出：
  89          *功  能：画一条直线
  90          ****************************************************************************/     
  91          
  92          void GUI_Line(uint xStart, uint yStart, uint xEnd, uint yEnd, uint color)
  93          {
  94   1              uint t;  
  95   1              int xerr = 0, yerr = 0, delta_x, delta_y, distance;  
  96   1              int incx, incy;  
  97   1              uint row, col;  
  98   1              delta_x = xEnd - xStart;//计算坐标增量  
  99   1              delta_y = yEnd - yStart;  
 100   1              col = xStart;  
 101   1              row = yStart;  
 102   1              if (delta_x > 0)
 103   1              {
 104   2                      incx=1;//设置单步方向
 105   2              }         
 106   1              else    
 107   1              {  
 108   2                  if (delta_x == 0)
 109   2                      {
 110   3                              incx = 0;//垂直线 
 111   3                      }                
 112   2                  else 
 113   2                              {
 114   3                                      incx = -1;
 115   3                                      delta_x = -delta_x;
 116   3                              }  
 117   2              }  
C51 COMPILER V9.00   GUI                                                                   11/04/2018 12:51:32 PAGE 3   

 118   1              if (delta_y > 0)
 119   1              {
 120   2                      incy = 1;
 121   2              }         
 122   1              else  
 123   1              {  
 124   2                  if (delta_y == 0)
 125   2                      {
 126   3                              incy = 0;//水平线  
 127   3                      } 
 128   2                  else 
 129   2                      {
 130   3                              incy = -1;
 131   3                              delta_y = -delta_y;
 132   3                      }  
 133   2              }  
 134   1              if (delta_x > delta_y)
 135   1              { 
 136   2                      distance = delta_x;//选取基本增量坐标轴  
 137   2              }
 138   1              else
 139   1              {
 140   2                      distance = delta_y; 
 141   2              }       
 142   1              for (t=0; t<=distance+1; t++)  
 143   1              {                                     //画线输出  
 144   2                  GUI_Dot(col, row, color);
 145   2                  xerr += delta_x;  
 146   2                  yerr += delta_y;  
 147   2                      if(xerr > distance)  
 148   2                  {  
 149   3                      xerr -= distance;  
 150   3                      col += incx;  
 151   3                  }  
 152   2                  if(yerr > distance)  
 153   2                  {  
 154   3                      yerr -= distance;  
 155   3                      row += incy;  
 156   3                  }  
 157   2              }  
 158   1      }
 159          
 160          /****************************************************************************
 161          *函数名：GUI_WriteCnChar 
 162          *输  入：x：汉字显示的X坐标
 163          *      * y：汉字显示的Y坐标
 164          *      * cn：要显示的汉字
 165          *      * wordColor：文字的颜色
 166          *      * backColor：背景颜色
 167          *输  出：
 168          *功  能：写二号楷体汉字
 169          ****************************************************************************/     
 170          
 171          #ifdef CHAR32_SHOW
 172          
 173          void GUI_Write32CnChar(uint x, uint y, uchar *cn, uint wordColor, uint backColor)        
 174          {  
 175   1              uchar i, j, wordNum;
 176   1              uint color;
 177   1              while (*cn != '\0')
 178   1              {
 179   2                      TFT_SetWindow(x, y, x+31, y+28);
C51 COMPILER V9.00   GUI                                                                   11/04/2018 12:51:32 PAGE 4   

 180   2                      for (wordNum=0; wordNum<20; wordNum++)
 181   2                      {       //wordNum扫描字库的字数
 182   3                              if ((CnChar32x29[wordNum].Index[0]==*cn)
 183   3                                   &&(CnChar32x29[wordNum].Index[1]==*(cn+1)))
 184   3                              {
 185   4                                      for(i=0; i<116; i++) 
 186   4                                      {       //MSK的位数
 187   5                                              color=CnChar32x29[wordNum].Msk[i];
 188   5                                              for(j=0;j<8;j++) 
 189   5                                              {
 190   6                                                      if((color&0x80)==0x80)
 191   6                                                      {
 192   7                                                              TFT_WriteData(wordColor);
 193   7                                                      }                                               
 194   6                                                      else
 195   6                                                      {
 196   7                                                              TFT_WriteData(backColor);
 197   7                                                      } 
 198   6                                                      color<<=1;
 199   6                                              }//for(j=0;j<8;j++)结束
 200   5                                      }    
 201   4                              }
 202   3                      } //for (wordNum=0; wordNum<20; wordNum++)结束  
 203   2                      cn += 2;
 204   2                      x += 32;
 205   2              }
 206   1      }
 207          #endif
 208          
 209          /****************************************************************************
 210          *函数名：GUI_WriteEnChar 
 211          *输  入：x：字母显示的X坐标
 212          *      * y：字母显示的Y坐标
 213          *      * cn：要显示的字母
 214          *      * wordColor：文字的颜色
 215          *      * backColor：背景颜色
 216          *输  出：
 217          *功  能：写四号字字母
 218          ****************************************************************************/     
 219          
 220          #ifdef CHAR14_SHOW
              
              void GUI_Write14CnChar(uint x,uint y,uchar *cn,uint wordColor,uint backColor)    
              {  
                      uchar i, j, wordNum;
                      uint color;
                      while (*cn != '\0')
                      {
                              TFT_SetWindow(x, y, x+23, y+18);
                              for (wordNum=0; wordNum<20; wordNum++)
                              {       //wordNum扫描字库的字数
                                      if ((CnChar19x24[wordNum].Index[0]==*cn)
                                           &&(CnChar19x24[wordNum].Index[1]==*(cn+1)))
                                      {
                                              for(i=0; i<57; i++) 
                                              {       //MSK的位数
                                                      color=CnChar19x24[wordNum].Msk[i];
                                                      for(j=0;j<8;j++) 
                                                      {
                                                              if((color&0x80)==0x80)
                                                              {
                                                                      TFT_WriteData(wordColor);
C51 COMPILER V9.00   GUI                                                                   11/04/2018 12:51:32 PAGE 5   

                                                              }                                               
                                                              else
                                                              {
                                                                      TFT_WriteData(backColor);
                                                              } 
                                                              color<<=1;
                                                      }//for(j=0;j<8;j++)结束
                                              }    
                                      }
                              } //for (wordNum=0; wordNum<20; wordNum++)结束  
                              cn += 2;
                              x += 24;
                      }
              }
              
              #endif 
 258          
 259          /****************************************************************************
 260          *函数名：GUI_WriteASCII 
 261          *输  入：x：字母显示的X坐标
 262          *      * y：字母显示的Y坐标
 263          *      * cn：要显示的字母
 264          *      * wordColor：文字的颜色
 265          *      * backColor：背景颜色
 266          *输  出：
 267          *功  能：写16X24的ASCII字符
 268          ****************************************************************************/     
 269          
 270          #ifdef USE_ASCII
 271          
 272          void GUI_WriteASCII(uint x, uint y, uchar *p, uint wordColor, uint backColor)
 273          {
 274   1              uchar j, wordByte,wordNum;
 275   1              uint color;
 276   1              while(*p != '\0')
 277   1              {
 278   2                      wordNum = *p - 32;
 279   2                      TFT_SetWindow(x,y,x+15, y+23);
 280   2                      for (wordByte=0; wordByte<48; wordByte++)
 281   2                      {
 282   3                              color = ASCII16x24[wordNum][wordByte];
 283   3                              for (j=0; j<8; j++) 
 284   3                              {
 285   4                                      if ((color&0x80) == 0x80)
 286   4                                      {
 287   5                                              TFT_WriteData(wordColor);
 288   5                                      }                                               
 289   4                                      else
 290   4                                      {
 291   5                                              TFT_WriteData(backColor);
 292   5                                      }       
 293   4                                      color <<= 1;
 294   4                              }
 295   3                      }
 296   2                      p++;
 297   2                      x +=16;
 298   2              }
 299   1      }
 300          #endif
 301          
 302          /****************************************************************************
 303          *函数名：GUI_ShowPicture 
C51 COMPILER V9.00   GUI                                                                   11/04/2018 12:51:32 PAGE 6   

 304          *输  入：x：图片显示起始X坐标
 305          *      * y：图片显示起始Y坐标
 306          *      * wide：图片的宽度
 307          *      * high：图片的高度
 308          *输  出：
 309          *功  能：显示一张图片（取自picture.h中的pic[]数组，换图片直接替换掉pic数组就
 310          *      * 可以了）
 311          ****************************************************************************/     
 312          
 313          #ifdef PICTURE_SHOW
              
              void GUI_ShowPicture(uint x, uint y, uchar wide, uint high)
              {
                      uint temp = 0, tmp = 0, num = 0;
                      TFT_SetWindow(x, y, x+wide-1, y+high-1);
                      num = wide * high * 2;
                      do
                      {   
                              temp = pic[tmp + 1];
                              temp = temp << 8;
                              temp = temp | pic[tmp];
                              TFT_WriteData(temp);   //逐点显示
                              tmp += 2;
                      }
                      while(tmp < num);       
              }
              
              #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1350    ----
   CONSTANT SIZE    =   5670    ----
   XDATA SIZE       =   ----      76
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
